{"version":3,"sources":["ActiveText.tsx","CostumeCheckbox.tsx","useToggle.ts","Text.tsx","Texts.tsx","Option.tsx","index.tsx"],"names":["ActivesDispatchContext","React","createContext","action","console","warn","ActivesContext","ActiveTextContainer","props","initialState","useRef","numOption","history","Array","keys","actives","fill","length","createInitialState","useReducer","oldState","id","push","filter","h","every","bit","indextoDelete","current","state","changeActives","Provider","value","children","CostumeCheckbox","color","style","type","checked","isOn","onChange","useToggle","initialValue","dispatch","useCallback","selectTextFromInput","e","target","select","Text","text","onChangeText","isEditing","toggleEditMode","correctFontWeight","fontWeight","inputRef","useEffect","focus","onEnter","key","ref","defaultValue","onBlur","onFocus","onKeyDown","title","onDoubleClick","ChangeTextsContext","TextsContext","useCreateTexts","initials","data","newTexts","URLparams","URLSearchParams","window","location","search","map","index","get","getTexts","texts","document","join","Space","Option","useContext","toggleThisID","updateText","colors","numOptions","Number","defaultTexts","missing","Math","max","concat","App","slice","changeText","useState","isVisible","setVisible","setTimeout","gridTemplateRows","repeat","visibility","ActiveText","DOM_ID","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.95b12220.chunk.js","sourcesContent":["import React, { FunctionComponent, useReducer, useContext, useRef } from \"react\"\r\n\r\ntype index = number\r\ntype actives = Array<boolean>\r\ninterface State {\r\n  actives: actives\r\n  history: Array<index>\r\n}\r\n\r\nconst ActivesDispatchContext = React.createContext((action: index) => console.warn(action))\r\nconst ActivesContext = React.createContext([] as actives)\r\n\r\nconst createInitialState = (numOption: number) => {\r\n  const history = [...Array(numOption - 1).keys()]\r\n  const actives = Array(numOption).fill(true) as Array<boolean>\r\n  actives[actives.length - 1] = false\r\n\r\n  return { actives, history }\r\n}\r\n\r\nconst ActiveTextContainer: FunctionComponent<{ numOption: number }> = props => {\r\n  const initialState = useRef(createInitialState(props.numOption))\r\n\r\n  const [state, changeActives] = useReducer((oldState: State, id: index) => {\r\n    const actives = [...oldState.actives] as actives\r\n    let history = [...oldState.history]\r\n\r\n    actives[id] = !actives[id]\r\n\r\n    if (actives[id]) history.push(id)\r\n    else history = history.filter(h => h !== id)\r\n\r\n    if (actives.every(bit => bit)) {\r\n      const indextoDelete = history[0]\r\n      actives[indextoDelete] = false\r\n      history = history.filter(h => h !== indextoDelete)\r\n    }\r\n\r\n    return { actives, history }\r\n  }, initialState.current)\r\n\r\n  return (\r\n    <ActivesContext.Provider value={state.actives}>\r\n      <ActivesDispatchContext.Provider value={changeActives}>\r\n        {props.children}\r\n      </ActivesDispatchContext.Provider>\r\n    </ActivesContext.Provider>\r\n  )\r\n}\r\n\r\nconst useActives = () => useContext(ActivesContext)\r\nconst useChangeActives = () => useContext(ActivesDispatchContext)\r\n\r\nexport { useActives, useChangeActives }\r\n\r\nexport default ActiveTextContainer","import React, { FunctionComponent, CSSProperties } from \"react\"\r\n\r\nconst CostumeCheckbox: FunctionComponent<{\r\n  onChange: () => void\r\n  isOn: boolean\r\n  color: string\r\n}> = props => {\r\n  // @ts-ignore\r\n  const color: CSSProperties = { \"--toggleBgColorActive\": props.color }\r\n  return (\r\n    <label style={color}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.isOn}\r\n        onChange={props.onChange}\r\n      />\r\n      <span/>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default CostumeCheckbox","import { useReducer, useCallback } from \"react\"\r\n\r\nconst useToggle = (initialValue: boolean) => {\r\n  const [value, dispatch] = useReducer((state: boolean) => !state, initialValue)\r\n  const toggle = useCallback(() => dispatch(), [])\r\n\r\n  return [value, toggle] as [boolean, () => void]\r\n}\r\n\r\nexport default useToggle","import React, { FunctionComponent, useRef, useEffect, useCallback } from \"react\"\r\n\r\nimport useToggle from \"./useToggle\"\r\n\r\nconst selectTextFromInput = (e: React.FocusEvent<HTMLInputElement>) => e.target.select()\r\n\r\ntype Text = FunctionComponent<{\r\n  isOn: boolean\r\n  text: string\r\n  onChangeText: (data: string) => void\r\n}>\r\nconst Text: Text = ({ isOn, text, onChangeText }) => {\r\n  const [isEditing, toggleEditMode] = useToggle(false)\r\n\r\n  const correctFontWeight = { fontWeight: isOn ? 500 : 300 }\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  useEffect(() => {\r\n    inputRef.current && inputRef.current.focus && inputRef.current.focus()\r\n  })\r\n\r\n  const onEnter = useCallback(e => e.key === \"Enter\" && toggleEditMode(), [toggleEditMode])\r\n\r\n  return isEditing ? (\r\n    <input\r\n      type=\"text\"\r\n      ref={inputRef}\r\n      defaultValue={text}\r\n      onBlur={toggleEditMode}\r\n      onFocus={selectTextFromInput}\r\n      style={correctFontWeight}\r\n      onKeyDown={onEnter}\r\n      onChange={e => onChangeText(e.target.value)}\r\n    />\r\n  ) : (\r\n    <span title=\"Double click to edit\" style={correctFontWeight} onDoubleClick={toggleEditMode}>\r\n      {text}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Text","import React, { useReducer, useEffect, useContext } from \"react\"\r\n\r\ninterface Action {\r\n  id: number\r\n  data: string\r\n}\r\n\r\nconst getTexts = (initials: Array<string>) => {\r\n  const URLparams = new URLSearchParams(window.location.search)\r\n\r\n  return initials.map((defaultValue, index) => {\r\n    const text = URLparams.get(`t${index + 1}`)\r\n    return text || defaultValue\r\n  })\r\n}\r\n\r\nconst useCreateTexts = (initials: Array<string>) => {\r\n  const [texts, dispatch] = useReducer((oldState: Array<string>, { id, data }: Action) => {\r\n    const newTexts = [...oldState]\r\n    newTexts[id] = data\r\n    return newTexts\r\n  }, getTexts(initials))\r\n\r\n  useEffect(() => {\r\n    document.title = texts.join(\" vs \")\r\n  })\r\n\r\n  return [texts, dispatch] as [Array<string>, React.Dispatch<Action>]\r\n}\r\n\r\nconst ChangeTextsContext = React.createContext((action: Action) => console.warn(action))\r\nconst TextsContext = React.createContext([] as Array<string>)\r\nconst useTexts = () => useContext(TextsContext)\r\nconst useChangeTexts = () => useContext(ChangeTextsContext)\r\n\r\nexport { useTexts, useChangeTexts, TextsContext, ChangeTextsContext }\r\nexport default useCreateTexts","import React, { FunctionComponent, useCallback } from \"react\"\r\nimport CostumeCheckbox from \"./CostumeCheckbox\"\r\nimport Text from \"./Text\"\r\nimport { useTexts, useChangeTexts } from \"./Texts\"\r\nimport { useActives, useChangeActives } from \"./ActiveText\"\r\n\r\nconst Space = () => <span />\r\nconst Option: FunctionComponent<{ id: number; color: string }> = ({ color, id }) => {\r\n  const actives = useActives()\r\n  const changeActives = useChangeActives()\r\n  const isOn = actives[id]\r\n  const toggleThisID = useCallback(() => changeActives(id), [id, changeActives])\r\n  const texts = useTexts()\r\n  const updateText = useChangeTexts()\r\n  const onChangeText = useCallback((data: string) => updateText({ id, data }), [id, updateText])\r\n\r\n  return (\r\n    <div>\r\n      <Space />\r\n      <CostumeCheckbox {...{ color, onChange: toggleThisID, isOn }} />\r\n      <Text {...{ isOn, text: texts[id], onChangeText, toggleThisID }} />\r\n      <Space />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Option","import React, { FunctionComponent, useState, useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ActiveTextContainer from \"./ActiveText\"\nimport Option from \"./Option\"\nimport useCreateTexts, { TextsContext, ChangeTextsContext } from \"./Texts\"\n\nconst Space = () => <div />\nconst colors = [\"#009975\", \"#145374\", \"#c72c41\"]\n\nconst numOptions = (() => {\n  const URLparams = new URLSearchParams(window.location.search)\n  const numOption = URLparams.get(\"num\")\n  return Number(numOption) || 3\n})()\n\nconst defaultTexts = (() => {\n  const defaults = [\"Bueno\", \"Bonito\", \"Barato\"]\n  const missing = Math.max(0, numOptions - 3)\n  return defaults.concat(Array(missing).fill(\"?\"))\n})()\n\nconst App: FunctionComponent = () => {\n  const [texts, changeText] = useCreateTexts(defaultTexts.slice(0, numOptions))\n  const [isVisible, setVisible] = useState(false)\n\n  useEffect(() => {\n    setTimeout(() => setVisible(true), 40)\n  }, [])\n\n  const style = {\n    gridTemplateRows: `1fr ${\"auto \".repeat(numOptions)} 2fr auto`,\n    visibility: isVisible ? \"initial\" : (\"hidden\" as \"initial\" | \"hidden\"),\n  }\n\n  return (\n    <>\n      <TextsContext.Provider value={texts}>\n        <main style={style}>\n          <ChangeTextsContext.Provider value={changeText}>\n            <ActiveTextContainer numOption={numOptions}>\n              <Space />\n              {[...Array(numOptions).keys()].map(id => (\n                <Option key={id} id={id} color={colors[id % colors.length]} />\n              ))}\n              <Space />\n            </ActiveTextContainer>\n          </ChangeTextsContext.Provider>\n        </main>\n      </TextsContext.Provider>\n    </>\n  )\n}\n\nconst DOM_ID = document.getElementById(\"root\")\nReactDOM.render(<App />, DOM_ID)"],"sourceRoot":""}